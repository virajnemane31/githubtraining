# This is a sample workflow file
# Github workflows are written in YAML (Yet Another Markup Language)
# its nothing but key & value pair
# being defined in 3 forms
# key & value
  # key: value
# library/dictionary
  # key: 
  #   key1: value1
  #   key2: value2
# list
  # key:
  # - key1: valuea
  #   key2: valueb
  # - key1: valuec
  #   key2: valued
name: first_work
on:
  push: 
jobs: 
  first_job:
    runs-on: ubuntu-latest
    steps: 
      - name: Execute Single Line
        run: cat /etc/os-release
  running_script_from_code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # checkout/clone the repository in the runner GITHUB_WORKSPACE
      - name: run script
        run: chmod 755 script.sh && ./script.sh
      - name: running multiple line
        run: |
          chmod 755 script.sh
          ./script.sh
  installing_packages:
    runs-on: ubuntu-latest
    steps: 
      - name: installing awscli
        run: | 
          sudo apt-get update -y
          sudo apt-get install -y awscli wget
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update -y
          sudo apt-get install -y terraform
          terraform --version >> data.txt
          aws --version >> data.txt
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: artifact
          path: data.txt
  download_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: download artfacts in different job
        uses: actions/download-artifact@v2
        with: 
          name: artifact
          path: ./
      - name: read the artfacts file
        run: cat data.txt
    needs: 
      - installing_packages
      - running_script_from_code
  deploy_on_production:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - download_artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on Production
        run: | 
          echo Running Production Deployment